from __future__ import annotations

from typing import Protocol

class Credential(Protocol):
    """Structured secret returned by keyring backends."""

    @property
    def username(self) -> str: ...
    @property
    def password(self) -> str: ...

class KeyringBackend(Protocol):
    """Runtime implementation used by the keyring package."""

    priority: float

    def get_password(self, service_name: str, username: str) -> str | None: ...
    def set_password(self, service_name: str, username: str, password: str) -> None: ...
    def delete_password(self, service_name: str, username: str) -> None: ...
    def get_credential(self, service_name: str, username: str | None) -> Credential | None: ...

def get_password(service_name: str, username: str) -> str | None: ...
def set_password(service_name: str, username: str, password: str) -> None: ...
def delete_password(service_name: str, username: str) -> None: ...
def get_credential(service_name: str, username: str | None = None) -> Credential | None: ...
def get_keyring() -> KeyringBackend: ...
def set_keyring(keyring: KeyringBackend) -> None: ...
def get_keyring_path() -> str: ...

__all__ = [
    "Credential",
    "KeyringBackend",
    "get_password",
    "set_password",
    "delete_password",
    "get_credential",
    "get_keyring",
    "set_keyring",
    "get_keyring_path",
]
